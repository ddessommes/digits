> sample_kms <- scaled_features[sample(1:nrow(scaled_features), 5000),]
> d_sample_kms <- dist(sample_kms)
> kms10 <- kmeans(sample_kms, centers = 10, nstart = 5)
> kms13 <- kmeans(sample_kms, centers = 13, nstart = 5)
> kms18 <- kmeans(sample_kms, centers = 18, nstart = 5)
Warning message:
did not converge in 10 iterations 
> kms22 <- kmeans(sample_kms, centers = 22, nstart = 5)
Warning messages:
1: did not converge in 10 iterations 
2: did not converge in 10 iterations 
> kms25 <- kmeans(sample_kms, centers = 25, nstart = 5)
> 
> str(kms10)
List of 9
 $ cluster     : int [1:5000] 2 7 2 8 4 6 8 9 6 2 ...
 $ centers     : num [1:10, 1:20] -1.379 -0.176 -0.349 0.392 1.06 ...
  ..- attr(*, "dimnames")=List of 2
  .. ..$ : chr [1:10] "1" "2" "3" "4" ...
  .. ..$ : chr [1:20] "pixelSUM_ALL" "pixelSUM_H1" "pixelSUM_H2" "pixelSUM_Q1" ...
 $ totss       : num 1e+05
 $ withinss    : num [1:10] 1909 3694 2320 1947 2808 ...
 $ tot.withinss: num 25229
 $ betweenss   : num 75091
 $ size        : int [1:10] 671 756 423 383 346 606 600 498 419 298
 $ iter        : int 8
 $ ifault      : int 0
 - attr(*, "class")= chr "kmeans"
> str(kms13)
List of 9
 $ cluster     : int [1:5000] 10 13 10 1 11 12 11 5 12 9 ...
 $ centers     : num [1:13, 1:20] -0.791 -0.503 1.363 2.498 0.534 ...
  ..- attr(*, "dimnames")=List of 2
  .. ..$ : chr [1:13] "1" "2" "3" "4" ...
  .. ..$ : chr [1:20] "pixelSUM_ALL" "pixelSUM_H1" "pixelSUM_H2" "pixelSUM_Q1" ...
 $ totss       : num 1e+05
 $ withinss    : num [1:13] 1457 1510 2009 1693 1907 ...
 $ tot.withinss: num 22047
 $ betweenss   : num 78273
 $ size        : int [1:13] 467 363 376 162 385 372 264 642 237 528 ...
 $ iter        : int 9
 $ ifault      : int 0
 - attr(*, "class")= chr "kmeans"
> str(kms18)
List of 9
 $ cluster     : int [1:5000] 7 4 7 10 17 3 17 8 3 5 ...
 $ centers     : num [1:18, 1:20] -1.476 0.33 -0.697 0.853 -0.436 ...
  ..- attr(*, "dimnames")=List of 2
  .. ..$ : chr [1:18] "1" "2" "3" "4" ...
  .. ..$ : chr [1:20] "pixelSUM_ALL" "pixelSUM_H1" "pixelSUM_H2" "pixelSUM_Q1" ...
 $ totss       : num 1e+05
 $ withinss    : num [1:18] 1153 691 1150 995 1346 ...
 $ tot.withinss: num 18413
 $ betweenss   : num 81907
 $ size        : int [1:18] 525 185 308 204 338 138 367 158 247 384 ...
 $ iter        : int 11
 $ ifault      : int 2
 - attr(*, "class")= chr "kmeans"
> str(kms22)
List of 9
 $ cluster     : int [1:5000] 18 17 18 6 11 19 11 7 19 3 ...
 $ centers     : num [1:22, 1:20] 1.9655 2.8292 -0.0249 0.2592 -1.581 ...
  ..- attr(*, "dimnames")=List of 2
  .. ..$ : chr [1:22] "1" "2" "3" "4" ...
  .. ..$ : chr [1:20] "pixelSUM_ALL" "pixelSUM_H1" "pixelSUM_H2" "pixelSUM_Q1" ...
 $ totss       : num 1e+05
 $ withinss    : num [1:22] 752 571 761 705 770 ...
 $ tot.withinss: num 16466
 $ betweenss   : num 83855
 $ size        : int [1:22] 159 63 230 213 406 382 149 239 226 151 ...
 $ iter        : int 11
 $ ifault      : int 2
 - attr(*, "class")= chr "kmeans"
> str(kms25)
List of 9
 $ cluster     : int [1:5000] 7 4 7 10 9 16 20 19 13 1 ...
 $ centers     : num [1:25, 1:20] 0.0387 2.803 1.3997 0.8421 1.6831 ...
  ..- attr(*, "dimnames")=List of 2
  .. ..$ : chr [1:25] "1" "2" "3" "4" ...
  .. ..$ : chr [1:20] "pixelSUM_ALL" "pixelSUM_H1" "pixelSUM_H2" "pixelSUM_Q1" ...
 $ totss       : num 1e+05
 $ withinss    : num [1:25] 617 562 679 678 562 ...
 $ tot.withinss: num 15421
 $ betweenss   : num 84899
 $ size        : int [1:25] 239 73 180 158 100 190 264 138 239 279 ...
 $ iter        : int 9
 $ ifault      : int 0
 - attr(*, "class")= chr "kmeans"
> 
> kms10$size
 [1] 671 756 423 383 346 606 600 498 419 298
> kms13$size
 [1] 467 363 376 162 385 372 264 642 237 528 301 584 319
> kms18$size
 [1] 525 185 308 204 338 138 367 158 247 384 376 262 214 154 216 390 353 181
> kms22$size
 [1] 159  63 230 213 406 382 149 239 226 151 317 125 345 144 305 188 147 291 282 183 272 183
> kms25$size
 [1] 239  73 180 158 100 190 264 138 239 279 120 223  72 312 253 177 187 309 170 304 167 143 379
[24] 160 164
> 
> 100*(kms10$betweenss / kms10$totss)
[1] 74.85172
> 100*(kms13$betweenss / kms13$totss)
[1] 78.02358
> 100*(kms18$betweenss / kms18$totss)
[1] 81.64581
> 100*(kms22$betweenss / kms22$totss)
[1] 83.58696
> 100*(kms25$betweenss / kms25$totss)
[1] 84.62841
> 
> 100*(kms10$tot.withinss / kms10$totss)
[1] 25.14828
> 100*(kms13$tot.withinss / kms13$totss)
[1] 21.97642
> 100*(kms18$tot.withinss / kms18$totss)
[1] 18.35419
> 100*(kms22$tot.withinss / kms22$totss)
[1] 16.41304
> 100*(kms25$tot.withinss / kms25$totss)
[1] 15.37159
> 
> plot(hclust(dist(kms10$centers)))
> plot(hclust(dist(kms13$centers)))
> plot(hclust(dist(kms18$centers)))
> plot(hclust(dist(kms22$centers)))
> plot(hclust(dist(kms25$centers)))
> 
> plot(hclust(as.dist(1-cor(t(kms10$centers)))))
> plot(hclust(as.dist(1-cor(t(kms13$centers)))))
> plot(hclust(as.dist(1-cor(t(kms18$centers)))))
> plot(hclust(as.dist(1-cor(t(kms22$centers)))))
> plot(hclust(as.dist(1-cor(t(kms25$centers)))))
> 
> 
> fpc::cluster.stats(d_sample_kms, kms10$cluster, aggregateonly = TRUE) 
$n
[1] 5000

$cluster.number
[1] 10

$min.cluster.size
[1] 298

$noisen
[1] 0

$average.between
[1] 6.207469

$average.within
[1] 2.845666

$max.diameter
[1] 12.57499

$min.separation
[1] 0.2100805

$ave.within.cluster.ss
[1] 5.045767

$avg.silwidth
[1] 0.2514626

$g2
NULL

$g3
NULL

$pearsongamma
[1] 0.4267522

$dunn
[1] 0.01670622

$dunn2
[1] 0.9532879

$entropy
[1] 2.261514

$wb.ratio
[1] 0.4584261

$ch
[1] 1650.256

$widestgap
[1] 3.137555

$sindex
[1] 0.4796582

$corrected.rand
NULL

$vi
NULL

> fpc::cluster.stats(d_sample_kms, kms13$cluster, aggregateonly = TRUE) 
$n
[1] 5000

$cluster.number
[1] 13

$min.cluster.size
[1] 162

$noisen
[1] 0

$average.between
[1] 6.147366

$average.within
[1] 2.6205

$max.diameter
[1] 12.02479

$min.separation
[1] 0.1761499

$ave.within.cluster.ss
[1] 4.409362

$avg.silwidth
[1] 0.2425314

$g2
NULL

$g3
NULL

$pearsongamma
[1] 0.4042388

$dunn
[1] 0.0146489

$dunn2
[1] 0.8536614

$entropy
[1] 2.504626

$wb.ratio
[1] 0.4262802

$ch
[1] 1475.459

$widestgap
[1] 3.346482

$sindex
[1] 0.4676837

$corrected.rand
NULL

$vi
NULL

> fpc::cluster.stats(d_sample_kms, kms18$cluster, aggregateonly = TRUE) 
$n
[1] 5000

$cluster.number
[1] 18

$min.cluster.size
[1] 138

$noisen
[1] 0

$average.between
[1] 6.077223

$average.within
[1] 2.38541

$max.diameter
[1] 11.00898

$min.separation
[1] 0.1205965

$ave.within.cluster.ss
[1] 3.682596

$avg.silwidth
[1] 0.2291747

$g2
NULL

$g3
NULL

$pearsongamma
[1] 0.3671183

$dunn
[1] 0.01095437

$dunn2
[1] 0.8749374

$entropy
[1] 2.821777

$wb.ratio
[1] 0.3925164

$ch
[1] 1303.627

$widestgap
[1] 3.346482

$sindex
[1] 0.4362228

$corrected.rand
NULL

$vi
NULL

> fpc::cluster.stats(d_sample_kms, kms22$cluster, aggregateonly = TRUE) 
$n
[1] 5000

$cluster.number
[1] 22

$min.cluster.size
[1] 63

$noisen
[1] 0

$average.between
[1] 6.0404

$average.within
[1] 2.25871

$max.diameter
[1] 10.45311

$min.separation
[1] 0.1522849

$ave.within.cluster.ss
[1] 3.293121

$avg.silwidth
[1] 0.2266344

$g2
NULL

$g3
NULL

$pearsongamma
[1] 0.3429945

$dunn
[1] 0.01456838

$dunn2
[1] 0.6818304

$entropy
[1] 3.016501

$wb.ratio
[1] 0.3739339

$ch
[1] 1207.217

$widestgap
[1] 3.346482

$sindex
[1] 0.4251619

$corrected.rand
NULL

$vi
NULL

> fpc::cluster.stats(d_sample_kms, kms25$cluster, aggregateonly = TRUE)
$n
[1] 5000

$cluster.number
[1] 25

$min.cluster.size
[1] 72

$noisen
[1] 0

$average.between
[1] 6.020458

$average.within
[1] 2.16319

$max.diameter
[1] 9.917293

$min.separation
[1] 0.1170246

$ave.within.cluster.ss
[1] 3.084165

$avg.silwidth
[1] 0.2196699

$g2
NULL

$g3
NULL

$pearsongamma
[1] 0.3294087

$dunn
[1] 0.01180006

$dunn2
[1] 0.7046191

$entropy
[1] 3.14393

$wb.ratio
[1] 0.3593066

$ch
[1] 1141.246

$widestgap
[1] 3.137555

$sindex
[1] 0.4080442

$corrected.rand
NULL

$vi
NULL

